//Ng select

// Custom Theming for Angular Material

// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$docstream-primary: mat.define-palette(mat.$indigo-palette);
$docstream-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$docstream-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$docstream-theme: mat.define-light-theme(
  (
    color: (
      primary: $docstream-primary,
      accent: $docstream-accent,
      warn: $docstream-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.

// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($docstream-theme);

/* You can add global styles to this file, and also import other style files */
@import "~@ng-select/ng-select/themes/default.theme.css";
@import "./partials/abstract/variables";
@import "./partials/base/typography";
@import "./partials/base/base";
@import "./partials/base/buttons";
@import "partials/abstract/mixins";
@import "components/forms";

// scrollbar styles

/* width */
::-webkit-scrollbar {
  width: 0.7rem;
  height: 0.7rem;
}

/* Track */
::-webkit-scrollbar-track {
  background: $white-100;
  border-radius: 1rem;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: $green-600;
  border-radius: 1rem;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: $green-700;
}

.docstream_snackbar_success {
  background: $white-100;
  box-shadow: 0rem 0.4rem 0.8rem rgba($blue-700, 0.15);
  border-radius: 0.8rem;
  font-size: 1.4rem;
  line-height: 2.1rem;
  color: $text-body;
  width: 57.2rem;
  padding: 1.6rem, 1.75rem;
}
.cdk-global-overlay-wrapper {
  background: rgba($black-100, 0.5);
  // justify-content: normal !important;
}

.cdk-overlay-pane {
  max-width: 91vw !important;
  .mat-dialog-container {
    border-radius: .8rem;
    width: 85rem !important;
  }
}

.mat-dialog-title {
  color: $blue-700;
  font-size: 1.8rem;
  line-height: 2.7rem;
  font-family: $docstream_font_bold;
}

.modal-width .mat-dialog-container {
  max-width: 46.4rem !important;
}

.full-width-dialog .mat-dialog-container {
  max-width: 100vw !important;
}

.dialog-header {
  display: flex;
  justify-content: space-between;
}
.mat-dialog-container {
  padding: 2.4rem 4rem 4rem 4rem !important;
}

.mat-progress-spinner circle,
.mat-spinner circle {
  stroke: $blue-700;
}

.btn,
.form-control,
a,
span,
button {
  &:focus {
    outline: none;
    box-shadow: none;
  }
}

.form-group {
  margin-bottom: 2.4rem;
}

/* The check-container */
.check-container {
  display: block;
  position: relative;
  margin-bottom: 1.2rem;
  cursor: pointer;
  font-size: 2.2rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  /* Hide the browser's default checkbox */
  input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0.2rem;
    left: 0;
    height: 1.8rem;
    width: 1.8rem;
    background-color: $grey-400;
    box-shadow: inset 0rem 0rem 0.2rem $grey-400;
    border-radius: 0.4rem;
  }
  tr td .checkmark {
    top: 0;
    left: 1.6rem;
  }

  /* On mouse-over, add a grey background color */
  &:hover input ~ .checkmark {
    background-color: #ccc;
  }

  /* When the checkbox is checked, add a colored background */
  input:checked ~ .checkmark {
    border: solid 0.6rem $green-600;
  }

  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }

  /* Show the checkmark when checked */
  input:checked ~ .checkmark:after {
    display: block;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.spin {
  animation-name: spin;
  animation-duration: 3000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.dot {
  width: 0.8rem;
  height: 0.8rem;
  border-radius: 50%;
  display: block;
  margin-right: 0.8rem;
  &-success {
    background-color: $success;
  }
  &-error {
    background-color: $error;
  }

  &-primary {
    background-color: $primary;
  }

  &-warning {
    background-color: $warning;
  }

  &-grey {
    background-color: $grey-500;
  }
}

table.table {
  caption {
    color: $blue-700;
    font-size: 1.8rem;
    font-weight: bold;
    margin-bottom: 1rem;
  }
  tbody {
    border-top: none !important;
    tr {
      border: 0.05rem solid $white-200;
      td {
        color: $text-body;
        font-size: 1.4rem;
        padding: 1.6rem;
        border: transparent;
        .dot {
          width: 0.8rem;
          height: 0.8rem;
          border-radius: 50%;
          display: block;
          &-success {
            background-color: $success;
          }
          &-error {
            background-color: $error;
          }
          &-primary {
            background-color: $info;
          }
          &-warning {
            background-color: $warning;
          }
          &-tip {
            background-color: $tip;
          }
        }
      }
    }
  }

  thead {
    background-color: $white-300;
    border-top: none !important;
    border-bottom: solid 0.1rem $white-200 !important;
    th {
      border-bottom: 0;
      font-weight: bold;
      font-size: 1.5rem;
      color: $text-body;
      padding: 1.4rem;
    }
  }
}

.full-width {
  min-width: 100vw !important;
  max-width: 100vw !important;
}

.nav-pills {
  border-bottom: 0.1rem solid rgba($green-400, 0.15);
  margin-bottom: 1rem;
  .nav-link {
    color: $text-body;
    opacity: 0.7;
    transition: all ease 0.3s;
    font-size: 1.5rem;
    border: none !important;
    &:hover {
      border: none !important;
    }
    &.active {
      color: $text-body;
      font-weight: bold;
      opacity: 1;
      background-color: transparent;
      position: relative;
      &::after {
        position: absolute;
        content: "";
        width: 3.1rem;
        height: 0.3rem;
        bottom: 0;
        left: 34%;
        background-color: $green-400;
        border-radius: 0.2rem 0.2rem 0rem 0rem;
      }
    }
  }
}

:host ::ng-deep .iti {
  width: 100% !important;
}


// upload style
.upload {
  &_main {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-grow: 1;
    padding: 0.8rem 1.2rem;
    background: $blue-100;
    border-radius: 0.6rem;
    .left {
      display: flex;
      align-items: center;
      img {
        margin-right: 1.4rem;
      }
    }
  }
  &_uploaded {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.8rem 1.2rem;
    background: $blue-100;
    border-radius: 0.6rem;
    flex-grow: 1;
    .left {
      margin-right: 1.4rem;
    }
    .middle {
      flex-basis: 100%;
      &-top {
        display: flex;
        align-items: center;
        justify-content: space-between;
      }
      // &-bottom {
      // }
    }
    .right {
      img {
        margin-left: 1.2rem;
      }
    }
  }
}
